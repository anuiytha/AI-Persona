{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Send,Bot,User,FileText}from'lucide-react';import{chat}from'../services/api';import ReactMarkdown from'react-markdown';import remarkGfm from'remark-gfm';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatInterface=()=>{const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);const handleSendMessage=async()=>{if(!inputMessage.trim()||isLoading)return;const userMessage={id:Date.now().toString(),content:inputMessage,type:'user',timestamp:new Date().toISOString()};setMessages(prev=>[...prev,userMessage]);setInputMessage('');setIsLoading(true);try{const response=await chat(inputMessage);const assistantMessage={id:(Date.now()+1).toString(),content:response.response,type:'assistant',timestamp:new Date().toISOString(),sources:response.sources};setMessages(prev=>[...prev,assistantMessage]);}catch(error){console.error('Chat error:',error);const errorMessage={id:(Date.now()+1).toString(),content:'Sorry, I encountered an error. Please try again.',type:'assistant',timestamp:new Date().toISOString()};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};const renderMessage=message=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.type),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:message.type==='user'?/*#__PURE__*/_jsx(User,{size:20}):/*#__PURE__*/_jsx(Bot,{size:20})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:/*#__PURE__*/_jsx(ReactMarkdown,{remarkPlugins:[remarkGfm],children:message.content})}),message.sources&&message.sources.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-sources\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sources:\"}),message.sources.map((source,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"source-item\",children:[/*#__PURE__*/_jsx(FileText,{size:16}),/*#__PURE__*/_jsxs(\"div\",{className:\"source-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[source.content.substring(0,200),\"...\"]}),source.metadata.source&&/*#__PURE__*/_jsxs(\"small\",{children:[\"Source: \",source.metadata.source]})]})]},index))]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-timestamp\",children:new Date(message.timestamp).toLocaleTimeString()})]})]},message.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-interface\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"RAG Chatbot\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Ask questions about your uploaded documents\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-message\",children:[/*#__PURE__*/_jsx(Bot,{size:48}),/*#__PURE__*/_jsx(\"h3\",{children:\"Welcome to RAG Chatbot!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Start a conversation by typing a message below. I'll search through your uploaded documents to provide relevant answers.\"})]}):messages.map(renderMessage),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message assistant\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:/*#__PURE__*/_jsx(Bot,{size:20})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Type your message here...\",disabled:isLoading,rows:1}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:!inputMessage.trim()||isLoading,className:\"send-button\",children:/*#__PURE__*/_jsx(Send,{size:20})})]})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Bot","User","FileText","chat","ReactMarkdown","remarkGfm","jsx","_jsx","jsxs","_jsxs","ChatInterface","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","id","Date","now","toString","content","type","timestamp","toISOString","prev","response","assistantMessage","sources","error","console","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","renderMessage","message","className","concat","children","size","remarkPlugins","length","map","source","index","substring","metadata","toLocaleTimeString","ref","value","onChange","target","onKeyPress","placeholder","disabled","rows","onClick"],"sources":["C:/Anushka/FSD Projects/AI Persona/persona-ai/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Send, Bot, User, FileText } from 'lucide-react';\r\nimport { chat } from '../services/api';\r\nimport { ChatMessage, Source } from '../types';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nconst ChatInterface: React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!inputMessage.trim() || isLoading) return;\r\n\r\n        const userMessage: ChatMessage = {\r\n            id: Date.now().toString(),\r\n            content: inputMessage,\r\n            type: 'user',\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInputMessage('');\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await chat(inputMessage);\r\n\r\n            const assistantMessage: ChatMessage = {\r\n                id: (Date.now() + 1).toString(),\r\n                content: response.response,\r\n                type: 'assistant',\r\n                timestamp: new Date().toISOString(),\r\n                sources: response.sources\r\n            };\r\n\r\n            setMessages(prev => [...prev, assistantMessage]);\r\n        } catch (error) {\r\n            console.error('Chat error:', error);\r\n            const errorMessage: ChatMessage = {\r\n                id: (Date.now() + 1).toString(),\r\n                content: 'Sorry, I encountered an error. Please try again.',\r\n                type: 'assistant',\r\n                timestamp: new Date().toISOString()\r\n            };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    const renderMessage = (message: ChatMessage) => (\r\n        <div key={message.id} className={`message ${message.type}`}>\r\n            <div className=\"message-avatar\">\r\n                {message.type === 'user' ? <User size={20} /> : <Bot size={20} />}\r\n            </div>\r\n            <div className=\"message-content\">\r\n                <div className=\"message-text\">\r\n                    <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n                        {message.content}\r\n                    </ReactMarkdown>\r\n                </div>\r\n                {message.sources && message.sources.length > 0 && (\r\n                    <div className=\"message-sources\">\r\n                        <h4>Sources:</h4>\r\n                        {message.sources.map((source: Source, index: number) => (\r\n                            <div key={index} className=\"source-item\">\r\n                                <FileText size={16} />\r\n                                <div className=\"source-content\">\r\n                                    <p>{source.content.substring(0, 200)}...</p>\r\n                                    {source.metadata.source && (\r\n                                        <small>Source: {source.metadata.source}</small>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                <div className=\"message-timestamp\">\r\n                    {new Date(message.timestamp).toLocaleTimeString()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"chat-interface\">\r\n            <div className=\"chat-header\">\r\n                <h2>RAG Chatbot</h2>\r\n                <p>Ask questions about your uploaded documents</p>\r\n            </div>\r\n\r\n            <div className=\"chat-messages\">\r\n                {messages.length === 0 ? (\r\n                    <div className=\"welcome-message\">\r\n                        <Bot size={48} />\r\n                        <h3>Welcome to RAG Chatbot!</h3>\r\n                        <p>Start a conversation by typing a message below. I'll search through your uploaded documents to provide relevant answers.</p>\r\n                    </div>\r\n                ) : (\r\n                    messages.map(renderMessage)\r\n                )}\r\n                {isLoading && (\r\n                    <div className=\"message assistant\">\r\n                        <div className=\"message-avatar\">\r\n                            <Bot size={20} />\r\n                        </div>\r\n                        <div className=\"message-content\">\r\n                            <div className=\"typing-indicator\">\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            <div className=\"chat-input\">\r\n                <textarea\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    placeholder=\"Type your message here...\"\r\n                    disabled={isLoading}\r\n                    rows={1}\r\n                />\r\n                <button\r\n                    onClick={handleSendMessage}\r\n                    disabled={!inputMessage.trim() || isLoading}\r\n                    className=\"send-button\"\r\n                >\r\n                    <Send size={20} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}