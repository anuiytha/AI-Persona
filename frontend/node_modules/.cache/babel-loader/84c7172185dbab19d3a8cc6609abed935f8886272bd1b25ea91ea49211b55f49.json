{"ast":null,"code":"import axios from'axios';const API_BASE_URL='/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// RAG API endpoints\nexport const ragApi={// Upload document\nuploadDocument:async function(content){let metadata=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const response=await api.post('/rag/upload',{content,metadata});return response.data;},// Chat with RAG\nchat:async(message,sessionId)=>{const response=await api.post('/rag/chat',{message,sessionId});return response.data;},// Direct query\nquery:async query=>{const response=await api.post('/rag/query',{query});return response.data;},// Get stats\ngetStats:async()=>{const response=await api.get('/rag/stats');return response.data;},// Health check\nhealthCheck:async()=>{const response=await api.get('/rag/health');return response.data;}};// Chat API endpoints\nexport const chatApi={// Start new session\nstartSession:async function(){let metadata=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.post('/chat/start',{metadata});return response.data;},// Send message\nsendMessage:async function(sessionId,message){let type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'user';const response=await api.post('/chat/message',{sessionId,message,type});return response.data;},// Get session\ngetSession:async sessionId=>{const response=await api.get(\"/chat/session/\".concat(sessionId));return response.data;},// End session\nendSession:async sessionId=>{const response=await api.delete(\"/chat/session/\".concat(sessionId));return response.data;},// Get all sessions\ngetSessions:async()=>{const response=await api.get('/chat/sessions');return response.data;}};// Health API endpoints\nexport const healthApi={// Basic health check\ncheck:async()=>{const response=await api.get('/health');return response.data;},// Detailed health check\ndetailed:async()=>{const response=await api.get('/health/detailed');return response.data;},// Readiness check\nready:async()=>{const response=await api.get('/health/ready');return response.data;}};// Convenience functions\nexport const getStats=ragApi.getStats;export const uploadDocument=ragApi.uploadDocument;export const chat=ragApi.chat;export const query=ragApi.query;export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","ragApi","uploadDocument","content","metadata","arguments","length","undefined","response","post","data","chat","message","sessionId","query","getStats","get","healthCheck","chatApi","startSession","sendMessage","type","getSession","concat","endSession","delete","getSessions","healthApi","check","detailed","ready"],"sources":["C:/Anushka/FSD Projects/AI Persona/persona-ai/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    ChatResponse,\r\n    UploadResponse,\r\n    DocumentStats,\r\n    QueryResponse,\r\n    ChatMessage\r\n} from '../types';\r\n\r\nconst API_BASE_URL = '/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// RAG API endpoints\r\nexport const ragApi = {\r\n    // Upload document\r\n    uploadDocument: async (content: string, metadata: Record<string, any> = {}): Promise<UploadResponse> => {\r\n        const response = await api.post('/rag/upload', { content, metadata });\r\n        return response.data;\r\n    },\r\n\r\n    // Chat with RAG\r\n    chat: async (message: string, sessionId?: string): Promise<ChatResponse> => {\r\n        const response = await api.post('/rag/chat', { message, sessionId });\r\n        return response.data;\r\n    },\r\n\r\n    // Direct query\r\n    query: async (query: string): Promise<QueryResponse> => {\r\n        const response = await api.post('/rag/query', { query });\r\n        return response.data;\r\n    },\r\n\r\n    // Get stats\r\n    getStats: async (): Promise<DocumentStats> => {\r\n        const response = await api.get('/rag/stats');\r\n        return response.data;\r\n    },\r\n\r\n    // Health check\r\n    healthCheck: async () => {\r\n        const response = await api.get('/rag/health');\r\n        return response.data;\r\n    }\r\n};\r\n\r\n// Chat API endpoints\r\nexport const chatApi = {\r\n    // Start new session\r\n    startSession: async (metadata: Record<string, any> = {}) => {\r\n        const response = await api.post('/chat/start', { metadata });\r\n        return response.data;\r\n    },\r\n\r\n    // Send message\r\n    sendMessage: async (sessionId: string, message: string, type: 'user' | 'assistant' = 'user') => {\r\n        const response = await api.post('/chat/message', { sessionId, message, type });\r\n        return response.data;\r\n    },\r\n\r\n    // Get session\r\n    getSession: async (sessionId: string) => {\r\n        const response = await api.get(`/chat/session/${sessionId}`);\r\n        return response.data;\r\n    },\r\n\r\n    // End session\r\n    endSession: async (sessionId: string) => {\r\n        const response = await api.delete(`/chat/session/${sessionId}`);\r\n        return response.data;\r\n    },\r\n\r\n    // Get all sessions\r\n    getSessions: async () => {\r\n        const response = await api.get('/chat/sessions');\r\n        return response.data;\r\n    }\r\n};\r\n\r\n// Health API endpoints\r\nexport const healthApi = {\r\n    // Basic health check\r\n    check: async () => {\r\n        const response = await api.get('/health');\r\n        return response.data;\r\n    },\r\n\r\n    // Detailed health check\r\n    detailed: async () => {\r\n        const response = await api.get('/health/detailed');\r\n        return response.data;\r\n    },\r\n\r\n    // Readiness check\r\n    ready: async () => {\r\n        const response = await api.get('/health/ready');\r\n        return response.data;\r\n    }\r\n};\r\n\r\n// Convenience functions\r\nexport const getStats = ragApi.getStats;\r\nexport const uploadDocument = ragApi.uploadDocument;\r\nexport const chat = ragApi.chat;\r\nexport const query = ragApi.query;\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}